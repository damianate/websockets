{"ts":1351597259915,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1," /**************************************************\n** NODE.JS REQUIREMENTS\n**************************************************/\nvar util = require(\"util\"),\t\t\t\t\t// Utility resources (logging, object inspection, etc)\n\tio = require(\"socket.io\"),\t\t\t\t// Socket.IO\n\tPlayer = require(\"./Player\").Player;\t// Player class\n\n\n/**************************************************\n** GAME VARIABLES\n**************************************************/\nvar socket,\t\t// Socket controller\n\tplayers;\t// Array of connected players\n\n\n/**************************************************\n** GAME INITIALISATION\n**************************************************/\nfunction init() {\n\t// Create an empty array to store players\n\tplayers = [];\n\n\t// Set up Socket.IO to listen on port 8000\n\tsocket = io.listen(80);\n\n\t// Configure Socket.IO\n\tsocket.configure(function() {\n\t\t// Only use WebSockets\n\t\tsocket.set(\"transports\", [\"websocket\"]);\n\n\t\t// Restrict log output\n\t\tsocket.set(\"log level\", 2);\n\t});\n\n\t// Start listening for events\n\tsetEventHandlers();\n};\n\n\n/**************************************************\n** GAME EVENT HANDLERS\n**************************************************/\nvar setEventHandlers = function() {\n\t// Socket.IO\n\tsocket.sockets.on(\"connection\", onSocketConnection);\n};\n\n// New socket connection\nfunction onSocketConnection(client) {\n\tutil.log(\"New player has connected: \"+client.id);\n\n\t// Listen for client disconnected\n\tclient.on(\"disconnect\", onClientDisconnect);\n\n\t// Listen for new player message\n\tclient.on(\"new player\", onNewPlayer);\n\n\t// Listen for move player message\n\tclient.on(\"move player\", onMovePlayer);\n};\n\n// Socket client has disconnected\nfunction onClientDisconnect() {\n\tutil.log(\"Player has disconnected: \"+this.id);\n\n\tvar removePlayer = playerById(this.id);\n\n\t// Player not found\n\tif (!removePlayer) {\n\t\tutil.log(\"Player not found: \"+this.id);\n\t\treturn;\n\t};\n\n\t// Remove player from players array\n\tplayers.splice(players.indexOf(removePlayer), 1);\n\n\t// Broadcast removed player to connected socket clients\n\tthis.broadcast.emit(\"remove player\", {id: this.id});\n};\n\n// New player has joined\nfunction onNewPlayer(data) {\n\t// Create a new player\n\tvar newPlayer = new Player(data.x, data.y);\n\tnewPlayer.id = this.id;\n\n\t// Broadcast new player to connected socket clients\n\tthis.broadcast.emit(\"new player\", {id: newPlayer.id, x: newPlayer.getX(), y: newPlayer.getY()});\n\n\t// Send existing players to the new player\n\tvar i, existingPlayer;\n\tfor (i = 0; i < players.length; i++) {\n\t\texistingPlayer = players[i];\n\t\tthis.emit(\"new player\", {id: existingPlayer.id, x: existingPlayer.getX(), y: existingPlayer.getY()});\n\t};\n\t\t\n\t// Add new player to the players array\n\tplayers.push(newPlayer);\n};\n\n// Player has moved\nfunction onMovePlayer(data) {\n\t// Find player in array\n\tvar movePlayer = playerById(this.id);\n\n\t// Player not found\n\tif (!movePlayer) {\n\t\tutil.log(\"Player not found: \"+this.id);\n\t\treturn;\n\t};\n\n\t// Update player position\n\tmovePlayer.setX(data.x);\n\tmovePlayer.setY(data.y);\n\n\t// Broadcast updated position to connected socket clients\n\tthis.broadcast.emit(\"move player\", {id: movePlayer.id, x: movePlayer.getX(), y: movePlayer.getY()});\n};\n\n\n/**************************************************\n** GAME HELPER FUNCTIONS\n**************************************************/\n// Find player by ID\nfunction playerById(id) {\n\tvar i;\n\tfor (i = 0; i < players.length; i++) {\n\t\tif (players[i].id == id)\n\t\t\treturn players[i];\n\t};\n\t\n\treturn false;\n};\n\n\n/**************************************************\n** RUN THE GAME\n**************************************************/\ninit();"]],"start1":0,"start2":0,"length1":0,"length2":3583}]],"length":3583}
{"contributors":[],"silentsave":false,"ts":1351597282150,"patch":[[{"diffs":[[0,".listen("],[-1,"80"],[1,"process.env.PORT || 8001"],[0,");\n\n\t// "]],"start1":774,"start2":774,"length1":18,"length2":40}]],"length":3605,"saved":false}
